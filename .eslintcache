[{"C:\\Users\\alica\\Desktop\\Project\\Project\\src\\index.js":"1","C:\\Users\\alica\\Desktop\\Project\\Project\\src\\App.js":"2","C:\\Users\\alica\\Desktop\\Project\\Project\\src\\components\\Signin.js":"3","C:\\Users\\alica\\Desktop\\Project\\Project\\src\\components\\Signup.js":"4","C:\\Users\\alica\\Desktop\\Project\\Project\\src\\store.js":"5","C:\\Users\\alica\\Desktop\\Project\\Project\\src\\components\\stores\\Log.js":"6","C:\\Users\\alica\\Desktop\\Project\\Project\\src\\views\\Login.js":"7","C:\\Users\\alica\\Desktop\\Project\\Project\\src\\routes.js":"8","C:\\Users\\alica\\Desktop\\Project\\Project\\src\\views\\Home.js":"9","C:\\Users\\alica\\Desktop\\Project\\Project\\src\\api\\gecici.js":"10","C:\\Users\\alica\\Desktop\\Project\\Project\\src\\ProtectedRoutes.js":"11","C:\\Users\\alica\\Desktop\\Project\\Project\\src\\ProtectedLogin.js":"12","C:\\Users\\alica\\Desktop\\Project\\Project\\src\\components\\Tasks.js":"13","C:\\Users\\alica\\Desktop\\Project\\Project\\src\\components\\ThemeSwitch.js":"14","C:\\Users\\alica\\Desktop\\Project\\Project\\src\\components\\LanguageSelector.js":"15","C:\\Users\\alica\\Desktop\\Project\\Project\\src\\components\\Language.js":"16","C:\\Users\\alica\\Desktop\\Project\\Project\\src\\components\\stores\\SettingSlice.js":"17","C:\\Users\\alica\\Desktop\\Project\\Project\\src\\components\\i18n\\index.js":"18","C:\\Users\\alica\\Desktop\\Project\\Project\\src\\components\\i18n\\provider.js":"19","C:\\Users\\alica\\Desktop\\Project\\Project\\src\\components\\i18n\\locales.js":"20","C:\\Users\\alica\\Desktop\\Project\\Project\\src\\components\\i18n\\messages\\index.js":"21","C:\\Users\\alica\\Desktop\\Project\\Project\\src\\components\\i18n\\messages\\en-US.js":"22","C:\\Users\\alica\\Desktop\\Project\\Project\\src\\components\\i18n\\messages\\de-DE.js":"23","C:\\Users\\alica\\Desktop\\Project\\Project\\src\\components\\i18n\\messages\\tr-TR.js":"24","C:\\Users\\alica\\Desktop\\Project\\Project\\src\\components\\i18n\\translate.js":"25"},{"size":348,"mtime":1658318269286,"results":"26","hashOfConfig":"27"},{"size":1252,"mtime":1658385888157,"results":"28","hashOfConfig":"27"},{"size":1855,"mtime":1658481958294,"results":"29","hashOfConfig":"27"},{"size":2344,"mtime":1658481976899,"results":"30","hashOfConfig":"27"},{"size":269,"mtime":1658384814416,"results":"31","hashOfConfig":"27"},{"size":1539,"mtime":1657780438189,"results":"32","hashOfConfig":"27"},{"size":3482,"mtime":1658481906274,"results":"33","hashOfConfig":"27"},{"size":305,"mtime":1657274586358,"results":"34","hashOfConfig":"35"},{"size":5813,"mtime":1658482961612,"results":"36","hashOfConfig":"27"},{"size":253,"mtime":1657222309096,"results":"37","hashOfConfig":"27"},{"size":384,"mtime":1658385056854,"results":"38","hashOfConfig":"27"},{"size":358,"mtime":1658385034979,"results":"39","hashOfConfig":"27"},{"size":2022,"mtime":1658483102066,"results":"40","hashOfConfig":"27"},{"size":2277,"mtime":1658341329537,"results":"41","hashOfConfig":"27"},{"size":2384,"mtime":1658483650725,"results":"42","hashOfConfig":"27"},{"size":327,"mtime":1658319654742,"results":"43","hashOfConfig":"27"},{"size":965,"mtime":1658479033090,"results":"44","hashOfConfig":"27"},{"size":85,"mtime":1658410375615,"results":"45","hashOfConfig":"27"},{"size":401,"mtime":1658476429857,"results":"46","hashOfConfig":"27"},{"size":91,"mtime":1658408316286,"results":"47","hashOfConfig":"27"},{"size":133,"mtime":1658410154869,"results":"48","hashOfConfig":"27"},{"size":676,"mtime":1658482317338,"results":"49","hashOfConfig":"27"},{"size":734,"mtime":1658482437951,"results":"50","hashOfConfig":"27"},{"size":704,"mtime":1658483228343,"results":"51","hashOfConfig":"27"},{"size":178,"mtime":1658478153056,"results":"52","hashOfConfig":"27"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"xo0ta0",{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},"1lvmsm1",{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\alica\\Desktop\\Project\\Project\\src\\index.js",[],"C:\\Users\\alica\\Desktop\\Project\\Project\\src\\App.js",[],"C:\\Users\\alica\\Desktop\\Project\\Project\\src\\components\\Signin.js",["116","117"],"import { useState } from \"react\";\r\n//import { useSelector } from \"react-redux\";\r\n\r\nimport { logging, epost, password } from \"./stores/Log\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport \"./Signin.css\";\r\nimport { Users } from \"../api/gecici\";\r\nimport { I18nProvider } from \"./i18n\";\r\nimport { LOCALES } from \"./i18n\";\r\nimport translate from \"./i18n/translate\";\r\nconst Signin = ({ setIsLog }) => {\r\n  //const epost = useSelector((state) => state.Log.value.epost);\r\n  //const password = useSelector((state) => state.Log.value.password);\r\n\r\n  const [Epost, setEpost] = useState(\"\");\r\n  const [Password, setPassword] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  const LoginHandler = () => {\r\n    dispatch(epost(Epost));\r\n    dispatch(password(Password));\r\n    const user = Users.find(\r\n      (user) =>\r\n        user.epost === Epost &&\r\n        user.password === Password &&\r\n        (Epost !== \"\") && (Password !== \"\")\r\n    );\r\n    if (user) {\r\n      setIsLog(\"true\");\r\n      dispatch(logging());\r\n    }\r\n  };\r\n  //22.07.2022\r\n  const [locale,setLocale]=useState(localStorage.getItem(\"locale\"))\r\n\r\n  return (\r\n    <I18nProvider locale={locale}>\r\n    <div className=\"user_info\">\r\n      \r\n      <div>\r\n        <b>{translate(\"email\")}</b>\r\n        <input\r\n          className=\"e-post__field\"\r\n          onChange={(e) => {\r\n            setEpost(e.target.value);\r\n          }}\r\n        />\r\n      </div>\r\n\r\n      <div>\r\n        <b>{translate(\"password\")}</b>\r\n        <input\r\n          className=\"password__field\"\r\n          type=\"password\"\r\n          onChange={(e) => {\r\n            setPassword(e.target.value);\r\n          }}\r\n        />\r\n      </div>\r\n      <button className=\"login_button\" onClick={LoginHandler}>\r\n        <b>{translate(\"signin-button\")}</b>\r\n      </button>\r\n    </div>\r\n    </I18nProvider>\r\n  );\r\n};\r\nexport default Signin;\r\n","C:\\Users\\alica\\Desktop\\Project\\Project\\src\\components\\Signup.js",["118","119"],"import { useDispatch } from \"react-redux\";\r\nimport \"./Signup.css\";\r\nimport { name, surname, epost, password, save } from \"./stores/Log\";\r\nimport { useState } from \"react\";\r\nimport { Users } from \"../api/gecici\";\r\nimport { I18nProvider, LOCALES } from \"./i18n\";\r\nimport translate from \"./i18n/translate\";\r\n\r\nconst Signup = ({ setIsLog }) => {\r\n  const dispatch = useDispatch();\r\n  const [Name, setName] = useState(\"\");\r\n  const [SurName, setSurname] = useState(\"\");\r\n  const [Epost, setEpost] = useState(\"\");\r\n  const [Password, setPassword] = useState(\"\");\r\n\r\n  const clickHandler = () => {\r\n    const newUser = {\r\n      epost: Epost,\r\n      password: Password,\r\n      name: Name,\r\n      surname: SurName,\r\n    };\r\n    dispatch(epost(Epost));\r\n    dispatch(password(Password));\r\n    dispatch(name(Name));\r\n    dispatch(surname(SurName));\r\n    const user = Users.find(\r\n      (user) =>\r\n        user.epost !== Epost &&\r\n        Epost !== \"\" &&\r\n        Password !== \"\" &&\r\n        Name !== \"\" &&\r\n        SurName !== \"\"\r\n    );\r\n    if (user) {\r\n      setIsLog(\"true\");\r\n      dispatch(save());\r\n      Users.push(newUser);\r\n    }\r\n  };\r\n  //22.07.2022\r\n  const [locale,setLocale]=useState(localStorage.getItem(\"locale\"))\r\n\r\n  return (\r\n    <I18nProvider locale={locale}>\r\n    <div className=\"user_info\">\r\n      <div>\r\n        <b>{translate(\"name\")}</b>\r\n        <input\r\n          className=\"text-field\"\r\n          onChange={(e) => {\r\n            setName(e.target.value);\r\n          }}\r\n        />\r\n      </div>\r\n      <div>\r\n        <b>{translate(\"surname\")}</b>\r\n        <input\r\n          className=\"text-field\"\r\n          onChange={(e) => {\r\n            setSurname(e.target.value);\r\n          }}\r\n        />\r\n      </div>\r\n      <div>\r\n        <b>{translate(\"email\")}</b>\r\n        <input\r\n          className=\"text-field\"\r\n          onChange={(e) => {\r\n            setEpost(e.target.value);\r\n          }}\r\n        />\r\n      </div>\r\n\r\n      <div>\r\n        <b>{translate(\"password\")}</b>\r\n        <input\r\n          className=\"text-field\"\r\n          onChange={(e) => {\r\n            setPassword(e.target.value);\r\n          }}\r\n        />\r\n      </div>\r\n      <button className=\"signup_button\" onClick={clickHandler}>\r\n        <b>{translate(\"signup-button\")}</b>\r\n      </button>\r\n    </div>\r\n    </I18nProvider>\r\n  );\r\n};\r\nexport default Signup;\r\n","C:\\Users\\alica\\Desktop\\Project\\Project\\src\\store.js",[],"C:\\Users\\alica\\Desktop\\Project\\Project\\src\\components\\stores\\Log.js",["120"],"import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { Users } from \"../../api/gecici\";\r\n\r\nexport const logSlice = createSlice({\r\n  name: \"counter\",\r\n  initialState: {\r\n    value: {\r\n      epost: \"\",\r\n      password: \"\",\r\n      name: \"\",\r\n      surname: \"\",\r\n      auth: false,\r\n      ISLog: localStorage.getItem(\"loggd\")\r\n    },\r\n  },\r\n  reducers: {\r\n    epost: (state, action) => {\r\n      state.value.epost = action.payload;\r\n      //console.log(state.value.epost);\r\n    },\r\n    password: (state, action) => {\r\n      state.value.password = action.payload;\r\n      //console.log(state.value.password);\r\n    },\r\n    name: (state, action) => {\r\n      state.value.name = action.payload;\r\n    },\r\n    surname: (state, action) => {\r\n      state.value.surname = action.payload;\r\n    },\r\n\r\n    logging: (state,action) => {\r\n\r\n      localStorage.setItem(\"loggd\",\"true\")\r\n      localStorage.setItem(\"epost\",state.value.epost)\r\n    },\r\n    save: (state) => {\r\n      const user = Users.find(user=>user.epost===state.value.epost && user.password===state.value.password)\r\n\r\n      localStorage.setItem(\"loggd\",\"true\")\r\n      localStorage.setItem(\"epost\",state.value.epost)\r\n    \r\n    },\r\n    logout: (state) => {\r\n      localStorage.setItem(\"loggd\",\"false\")\r\n      localStorage.removeItem(\"epost\")\r\n    },\r\n    ISLog:(state)=>{\r\n\r\n    }\r\n  },\r\n});\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { logging, epost, password, name, surname, save, logout,ISLog } = logSlice.actions;\r\n\r\nexport default logSlice.reducer;\r\n","C:\\Users\\alica\\Desktop\\Project\\Project\\src\\views\\Login.js",["121","122"],"import Signin from \"../components/Signin\";\r\nimport Signup from \"../components/Signup\";\r\nimport * as React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Tabs from \"@mui/material/Tabs\";\r\nimport Tab from \"@mui/material/Tab\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Box from \"@mui/material/Box\";\r\nimport \"./Login.css\";\r\nimport ThemeSwitch from \"../components/ThemeSwitch\";\r\nimport { I18nProvider, LOCALES } from \"../components/i18n\";\r\nimport translate from \"../components/i18n/translate\";\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box sx={{ p: 3 }}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.number.isRequired,\r\n  value: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    \"aria-controls\": `simple-tabpanel-${index}`,\r\n  };\r\n}\r\nconst Login = ({ setIsLog, theme, setTheme }) => {\r\n  const [value, setValue] = React.useState(0);\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n  let boolean;\r\n  if (localStorage.getItem(\"theme\") === \"light\") {\r\n    boolean = false;\r\n  } else {\r\n    boolean = true;\r\n  }\r\n  ////////////////21.07.2022\r\n\r\n  ///22.07.2022\r\n  const [locale,setLocale]=React.useState(localStorage.getItem(\"locale\"))\r\n\r\n  return (\r\n    <I18nProvider locale={locale}>\r\n      <div className=\"log\" data-theme={theme}>\r\n        <div className=\"tabbar\">\r\n          <ThemeSwitch\r\n            onClick={() => {\r\n              if (theme === \"light\") {\r\n                setTheme(\"dark\");\r\n                localStorage.setItem(\"theme\", \"dark\");\r\n              } else {\r\n                setTheme(\"light\");\r\n                localStorage.setItem(\"theme\", \"light\");\r\n              }\r\n            }}\r\n            defaultChecked={boolean}\r\n          />\r\n          <h3 className=\"merhaba\">{translate(\"hello\")},</h3>\r\n          <h5 className=\"girisYap\">{translate(\"logginMessage\")}</h5>\r\n          <p className=\"divider\"></p>\r\n          <div className=\"log-action\">\r\n            <Box sx={{ width: \"100%\" }}>\r\n              {/* burada classname yoktu */}\r\n              <Box sx={{ borderColor: \"divider\", marginLeft: 7 }}>\r\n                <Tabs\r\n                  value={value}\r\n                  onChange={handleChange}\r\n                  aria-label=\"basic tabs example\"\r\n                  className=\"tab\"\r\n                >\r\n                  <Tab\r\n                    label={<b className=\"tabs\">{translate(\"signin\")}</b>}\r\n                    {...a11yProps(0)}\r\n                  />\r\n                  <Tab\r\n                    label={<b className=\"tabs\">{translate(\"signup\")}</b>}\r\n                    {...a11yProps(1)}\r\n                  />\r\n                </Tabs>\r\n              </Box>\r\n              <TabPanel value={value} index={0}>\r\n                {<Signin setIsLog={setIsLog} />}\r\n              </TabPanel>\r\n              <TabPanel value={value} index={1}>\r\n                {<Signup setIsLog={setIsLog} />}\r\n              </TabPanel>\r\n            </Box>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </I18nProvider>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\alica\\Desktop\\Project\\Project\\src\\routes.js",[],["123","124"],"C:\\Users\\alica\\Desktop\\Project\\Project\\src\\views\\Home.js",["125","126","127","128","129"],"import { Button, TextField } from \"@mui/material\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { logout } from \"../components/stores/Log\";\r\nimport Tasks from \"../components/Tasks\";\r\nimport \"./Home.css\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport ThemeSwitch from \"../components/ThemeSwitch\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport * as React from \"react\";\r\nimport AddTaskIcon from \"@mui/icons-material/AddTask\";\r\nimport LanguageSelector from \"../components/LanguageSelector\";\r\nimport { I18nProvider } from \"../components/i18n\";\r\nimport translate from \"../components/i18n/translate\";\r\nconst Home = ({ setIsLog, theme, setTheme }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [text, setText] = useState(\"\");\r\n  const kullanici = localStorage.getItem(\"epost\") + \"#TR28\";\r\n  //let task = [];\r\n\r\n  const [todos, setTodos] = useState([]);\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n  //console.log(todos)\r\n  const unique_id = uuid();\r\n  const fetchData = async () => {\r\n    await fetch(\"http://localhost:3004/todos\")\r\n      .then((response) => response.json())\r\n      .then((data) => setTodos(data))\r\n      .catch((error) => console.log(error));\r\n  };\r\n  const onAdd = async () => {\r\n    await fetch(\"http://localhost:3004/todos\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        id: unique_id,\r\n        user: kullanici,\r\n        isDone: false,\r\n        task: text,\r\n      }),\r\n      headers: {\r\n        \"Content-type\": \"application/json; charset=UTF-8\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        if (response.status !== 201) {\r\n          return;\r\n        } else {\r\n          return response.json();\r\n        }\r\n      })\r\n      .then((data) => {\r\n        setTodos((users) => [...users, data]);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  const onDelete = async (id) => {\r\n    await fetch(`http://localhost:3004/todos/${id}`, {\r\n      method: \"DELETE\",\r\n    })\r\n      .then((response) => {\r\n        if (response.status !== 200) {\r\n          return;\r\n        } else {\r\n          setTodos(\r\n            todos.filter((todo) => {\r\n              return todo.id !== id;\r\n            })\r\n          );\r\n        }\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n  const onEdit = async (id, task, isDone, user) => {\r\n    console.log(\"onEdit çalıştı\");\r\n    await fetch(`http://localhost:3004/todos/${id}`, {\r\n      method: \"PUT\",\r\n      body: JSON.stringify({\r\n        id: id,\r\n        user: user,\r\n        task: task,\r\n        isDone: isDone,\r\n      }),\r\n      headers: {\r\n        \"Content-type\": \"application/json; charset=UTF-8\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        if (response.status !== 200) {\r\n          console.log(85);\r\n          return;\r\n        } else {\r\n          console.log(89);\r\n          return response.json();\r\n        }\r\n      })\r\n      .then((data) => {\r\n        const updatedTodos = todos.map((todo) => {\r\n          console.log(96);\r\n          if (todo.id === id) {\r\n            todo.task = task;\r\n            todo.isDone = isDone;\r\n          }\r\n          return todo;\r\n        });\r\n        console.log(task, \" \");\r\n        setTodos((todos) => updatedTodos);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  function InputBoxReset(inputID) {\r\n    document.getElementById(inputID).value = \"\";\r\n  }\r\n\r\n  // const [checked, setChecked] = React.useState(true);\r\n  // const handleChange = (event) => {\r\n  //   setChecked(event.target.checked);\r\n  //   console.log(\"Gece modu açıldı\");\r\n  // };\r\n\r\n  let boolean;\r\n  if (localStorage.getItem(\"theme\") === \"light\") {\r\n    boolean = false;\r\n  } else {\r\n    boolean = true;\r\n  }\r\n  ///22.02.2022\r\n  const [locale, setLocale] = React.useState(localStorage.getItem(\"locale\"));\r\n\r\n  return (\r\n    <I18nProvider locale={locale}>\r\n      <div className=\"screen\" data-theme={theme}>\r\n        <ThemeSwitch\r\n          sx={{ m: 1 }}\r\n          onClick={() => {\r\n            if (theme === \"light\") {\r\n              setTheme(\"dark\");\r\n              localStorage.setItem(\"theme\", \"dark\");\r\n            } else {\r\n              setTheme(\"light\");\r\n              localStorage.setItem(\"theme\", \"light\");\r\n            }\r\n          }}\r\n          defaultChecked={boolean}\r\n          inputProps={{ \"aria-label\": \"controlled\" }}\r\n        />\r\n\r\n        <button\r\n          onClick={() => {\r\n            dispatch(logout());\r\n            setIsLog(\"false\");\r\n          }}\r\n          className=\"exit-btn\"\r\n        >\r\n          {translate(\"logout-button\")}\r\n        </button>\r\n        <LanguageSelector />\r\n        <div className=\"add-group\">\r\n          <input\r\n            label=\"Todo\"\r\n            id=\"outlined-basic\"\r\n            className=\"task-texfield\"\r\n            onChange={(e) => {\r\n              setText(e.target.value);\r\n            }}\r\n          ></input>\r\n          <button\r\n            className=\"task-add\"\r\n            onClick={() => {\r\n              if (text !== \"\") {\r\n                InputBoxReset(\"outlined-basic\");\r\n                onAdd();\r\n                setText(\"\");\r\n              }\r\n            }}\r\n          >\r\n            {translate(\"add-button\")}\r\n          </button>\r\n        </div>\r\n        {todos.length === 0 ? (\r\n          <p>{translate(\"empty-message\")}</p>\r\n        ) : (\r\n          todos.map((user) =>\r\n            kullanici === user.user ? (\r\n              <Tasks\r\n                id={user.id}\r\n                task={user.task}\r\n                isDone={user.isDone}\r\n                user={user.user}\r\n                onDelete={onDelete}\r\n                onEdit={onEdit}\r\n              />\r\n            ) : (\r\n              console.clear()\r\n            )\r\n          )\r\n        )}\r\n      </div>\r\n    </I18nProvider>\r\n  );\r\n};\r\nexport default Home;\r\n","C:\\Users\\alica\\Desktop\\Project\\Project\\src\\api\\gecici.js",[],"C:\\Users\\alica\\Desktop\\Project\\Project\\src\\ProtectedRoutes.js",[],"C:\\Users\\alica\\Desktop\\Project\\Project\\src\\ProtectedLogin.js",[],"C:\\Users\\alica\\Desktop\\Project\\Project\\src\\components\\Tasks.js",["130"],"import { useState } from \"react\";\r\n//import \"../views/Home.css\";\r\nimport React from \"react\";\r\nimport { I18nProvider } from \"./i18n\";\r\nimport translate from \"./i18n/translate\";\r\nimport \"./Tasks.css\"\r\nconst Tasks = ({ id, onDelete, task, onEdit,isDone,user }) => {\r\n  const handleDelete = () => {\r\n    onDelete(id);\r\n  };\r\n  //const [Task, setTask] = useState(task);\r\n  const handleComplate = () => {\r\n    onEdit(id,task,!isDone,user)\r\n    console.log(isDone)\r\n  };\r\n\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const handleEdit = () => {\r\n    console.log(\"handleEdit çalıştı\")\r\nconsole.log(id,task)\r\n    setIsEdit(!isEdit);\r\n  };\r\n  const handleOnEditSubmit = (event) => {\r\n    event.preventDefault();\r\n    console.log(\"handleOnEditSubmit çalıştı\")\r\n    onEdit(id, event.target.task.value,isDone,user);\r\n    setIsEdit(!isEdit);\r\n  };\r\n  const [locale, setLocale] = React.useState(localStorage.getItem(\"locale\"));\r\n\r\n  return (\r\n    <I18nProvider locale={locale}>\r\n    <div>\r\n      <div className=\"kart\">\r\n        {isEdit ? (\r\n          <form onSubmit={handleOnEditSubmit} className=\"edit-task\">\r\n            <input placeholder=\"Task\" name=\"task\" defaultValue={task} />\r\n            <button onSubmit={handleOnEditSubmit}>Save</button>\r\n          </form>\r\n        ) : (\r\n          <div className=\"task\">\r\n            <span className=\"task-text\" style={{textDecoration: isDone?\"line-through\":\"none\"}}>{task}</span>\r\n            <div  className=\"control_buttons\">\r\n            <button className=\"edit-button\" onClick={handleEdit}><p className=\"button-text\">{translate(\"edit-button\")}</p></button>\r\n            <button className=\"complate-button\" onClick={handleComplate}><p className=\"button-text\">{translate(\"complate-button\")}</p></button>\r\n            <button className=\"delete-button\" onClick={handleDelete}><p className=\"button-text\">{translate(\"delete-button\")}</p></button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n    </I18nProvider>\r\n  );\r\n};\r\nexport default Tasks;\r\n","C:\\Users\\alica\\Desktop\\Project\\Project\\src\\components\\ThemeSwitch.js",[],"C:\\Users\\alica\\Desktop\\Project\\Project\\src\\components\\LanguageSelector.js",["131","132","133","134"],"import { Button, Menu, MenuItem } from \"@mui/material\";\r\nimport KeyboardArrowDownIcon from \"@mui/icons-material/KeyboardArrowDown\";\r\nimport LanguageIcon from \"@mui/icons-material/Language\";\r\nimport React, { useState,useEffect } from \"react\";\r\nimport { Language } from \"./Language\";\r\nimport { I18nProvider, LOCALES } from \"./i18n\";\r\nimport translate from \"./i18n/translate\";\r\nconst LanguageSelector = () => {\r\n  const languages = [\r\n    { id: 1, code: \"en\", name: \"English\" },\r\n    { id: 2, code: \"tr\", name: \"Türkçe\" },\r\n    { id: 3, code: \"de\", name: \"Deutsch\" },\r\n  ];\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n    window.location.reload()\r\n\r\n  };\r\n  const open = Boolean(anchorEl);\r\n\r\n  const [locale, setLocale] = useState(localStorage.getItem(\"locale\"));\r\n\r\n  return (\r\n    <I18nProvider locale={locale}>\r\n      <div>\r\n        <Button\r\n          endIcon={<LanguageIcon />}\r\n          id=\"basic-button\"\r\n          aria-controls={open ? \"basic-menu\" : undefined}\r\n          aria-haspopup=\"true\"\r\n          aria-expanded={open ? \"true\" : undefined}\r\n          onClick={handleClick}\r\n        >\r\n          {translate(\"language-button\")}\r\n        </Button>\r\n        <Menu\r\n          id=\"basic-menu\"\r\n          anchorEl={anchorEl}\r\n          open={open}\r\n          onClose={handleClose}\r\n          MenuListProps={{\r\n            \"aria-labelledby\": \"basic-button\",\r\n          }}\r\n        >\r\n          {languages.map((item) => {\r\n            return (\r\n              <MenuItem\r\n                key={item.id}\r\n                onClick={() => {\r\n                  console.log(item.name, \"clicked\");\r\n                  //localStorage.setItem()\r\n                  if (item.id === 1) {\r\n                    localStorage.setItem(\"locale\", LOCALES.ENGLISH);\r\n                  } else if (item.id === 2) {\r\n                    localStorage.setItem(\"locale\", LOCALES.TURKISH);\r\n                  } else {\r\n                    localStorage.setItem(\"locale\", LOCALES.GERMAN);\r\n                  }\r\n                  handleClose();\r\n                }}\r\n              >\r\n                {item.name}\r\n              </MenuItem>\r\n            );\r\n          })}\r\n        </Menu>\r\n      </div>\r\n    </I18nProvider>\r\n  );\r\n};\r\nexport default LanguageSelector;\r\n","C:\\Users\\alica\\Desktop\\Project\\Project\\src\\components\\Language.js",[],"C:\\Users\\alica\\Desktop\\Project\\Project\\src\\components\\stores\\SettingSlice.js",["135","136"],"\r\nimport {createSlice} from \"@reduxjs/toolkit\";\r\nimport { Language } from \"../Language\";\r\nimport useLocalStorage from \"use-local-storage\";\r\n\r\nconst settingsSlice = createSlice({\r\n    name: 'settings',\r\n    initialState: {\r\n        language: Language[\"en\"],\r\n        settings: JSON.parse(localStorage.getItem(\"settings\")),\r\n        theme:localStorage.getItem('theme'),\r\n        language:localStorage.getItem(\"language\")\r\n    },\r\n    reducers:{\r\n        changeLanguage(state,action){\r\n            state.language = action.payload\r\n            //localStorage.setItem(\"settings\",JSON.stringify({...state.settings,language:action.payload}))\r\n            localStorage.setItem(\"language\",action.payload)\r\n        },\r\n        changeTheme(state,action){\r\n            state.theme=action.payload\r\n            //localStorage.setItem('theme'==='light'?'dark':'light')\r\n        }\r\n\r\n    }\r\n})\r\n\r\nexport const settingsActions = settingsSlice.actions\r\n\r\nexport default settingsSlice","C:\\Users\\alica\\Desktop\\Project\\Project\\src\\components\\i18n\\index.js",[],"C:\\Users\\alica\\Desktop\\Project\\Project\\src\\components\\i18n\\provider.js",[],"C:\\Users\\alica\\Desktop\\Project\\Project\\src\\components\\i18n\\locales.js",[],"C:\\Users\\alica\\Desktop\\Project\\Project\\src\\components\\i18n\\messages\\index.js",["137"],"import en from \"./en-US\"\r\nimport tr from \"./tr-TR\"\r\nimport de from \"./de-DE\"\r\nexport default {\r\n    ...en,\r\n    ...tr,\r\n    ...de,\r\n}","C:\\Users\\alica\\Desktop\\Project\\Project\\src\\components\\i18n\\messages\\en-US.js",["138"],"import { LOCALES } from \"../locales\"\r\nexport default{\r\n    [LOCALES.ENGLISH]:{\r\n        \"hello\":\"Hello\",\r\n        \"logginMessage\":\"Sign in or create an account!\",\r\n        \"signin\":\"Sign in\",\r\n        \"signup\":\"Sign up\",\r\n        \"email\":\"Email\",\r\n        \"password\":\"Password\",\r\n        \"name\":\"Name\",\r\n        \"surname\":\"Surname\",\r\n        \"signin-button\":\"Sign in\",\r\n        \"signup-button\":\"Sign up\",\r\n//\r\n        \"logout-button\":\"Log out\",\r\n        \"language-button\":\"Language\",\r\n        \"empty-message\":\"Nothing to show here!\",\r\n        \"add-button\":\"Add\",\r\n        \"edit-button\":\"Edit\",\r\n        \"complate-button\":\"Complate\",\r\n        \"delete-button\":\"Delete\"\r\n    }\r\n}","C:\\Users\\alica\\Desktop\\Project\\Project\\src\\components\\i18n\\messages\\de-DE.js",["139"],"import { LOCALES } from \"../locales\"\r\nexport default{\r\n    [LOCALES.GERMAN]:{\r\n        \"hello\":\"Hallo\",\r\n        \"logginMessage\":\"Melden Sie sich an oder erstellen Sie ein Konto!\",\r\n        \"signin\":\"Einloggen\",\r\n        \"signup\":\"Anmelden\",\r\n        \"email\":\"Email\",\r\n        \"password\":\"Passwort\",\r\n        \"name\":\"Name\",\r\n        \"surname\":\"Nachname\",\r\n        \"signin-button\":\"Einloggen\",\r\n        \"signup-button\":\"Anmelden\",\r\n        //\r\n        \"logout-button\":\"Ausloggen\",\r\n        \"language-button\":\"Sprache\",\r\n        \"empty-message\":\"Hier gibt es nichts zu zeigen!\",\r\n        \"add-button\":\"Hinzufügen\",\r\n        \"edit-button\":\"Bearbeiten\",\r\n        \"complate-button\":\"Komplet\",\r\n        \"delete-button\":\"Löschen\"\r\n    }\r\n}","C:\\Users\\alica\\Desktop\\Project\\Project\\src\\components\\i18n\\messages\\tr-TR.js",["140"],"import { LOCALES } from \"../locales\"\r\nexport default{\r\n    [LOCALES.TURKISH]:{\r\n        \"hello\":\"Merhaba\",\r\n        \"logginMessage\":\"Giriş yap veya hesap oluştur!\",\r\n        \"signin\":\"Giriş Yap\",\r\n        \"signup\":\"Üye Ol\",\r\n        \"email\":\"E-Posta\",\r\n        \"password\":\"Şifre\",\r\n        \"name\":\"Ad\",\r\n        \"surname\":\"Soyad\",\r\n        \"signin-button\":\"Giriş Yap\",\r\n        \"signup-button\":\"Kaydol\",\r\n        //\r\n        \"logout-button\":\"Çıkış Yap\",\r\n        \"language-button\":\"Dil\",\r\n        \"empty-message\":\"Burada gösterilecek bir şey yok!\",\r\n        \"add-button\":\"Ekle\",\r\n        \"edit-button\":\"Düzenle\",\r\n        \"complate-button\":\"Tamamla\",\r\n        \"delete-button\":\"Sil\"\r\n    }\r\n}","C:\\Users\\alica\\Desktop\\Project\\Project\\src\\components\\i18n\\translate.js",[],{"ruleId":"141","severity":1,"message":"142","line":10,"column":10,"nodeType":"143","messageId":"144","endLine":10,"endColumn":17},{"ruleId":"141","severity":1,"message":"145","line":35,"column":17,"nodeType":"143","messageId":"144","endLine":35,"endColumn":26},{"ruleId":"141","severity":1,"message":"142","line":6,"column":24,"nodeType":"143","messageId":"144","endLine":6,"endColumn":31},{"ruleId":"141","severity":1,"message":"145","line":42,"column":17,"nodeType":"143","messageId":"144","endLine":42,"endColumn":26},{"ruleId":"141","severity":1,"message":"146","line":38,"column":13,"nodeType":"143","messageId":"144","endLine":38,"endColumn":17},{"ruleId":"141","severity":1,"message":"142","line":11,"column":24,"nodeType":"143","messageId":"144","endLine":11,"endColumn":31},{"ruleId":"141","severity":1,"message":"145","line":60,"column":17,"nodeType":"143","messageId":"144","endLine":60,"endColumn":26},{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","replacedBy":"150"},{"ruleId":"141","severity":1,"message":"151","line":1,"column":10,"nodeType":"143","messageId":"144","endLine":1,"endColumn":16},{"ruleId":"141","severity":1,"message":"152","line":1,"column":18,"nodeType":"143","messageId":"144","endLine":1,"endColumn":27},{"ruleId":"141","severity":1,"message":"153","line":9,"column":8,"nodeType":"143","messageId":"144","endLine":9,"endColumn":24},{"ruleId":"141","severity":1,"message":"154","line":11,"column":8,"nodeType":"143","messageId":"144","endLine":11,"endColumn":19},{"ruleId":"141","severity":1,"message":"145","line":132,"column":18,"nodeType":"143","messageId":"144","endLine":132,"endColumn":27},{"ruleId":"141","severity":1,"message":"145","line":29,"column":18,"nodeType":"143","messageId":"144","endLine":29,"endColumn":27},{"ruleId":"141","severity":1,"message":"155","line":2,"column":8,"nodeType":"143","messageId":"144","endLine":2,"endColumn":29},{"ruleId":"141","severity":1,"message":"156","line":4,"column":26,"nodeType":"143","messageId":"144","endLine":4,"endColumn":35},{"ruleId":"141","severity":1,"message":"157","line":5,"column":10,"nodeType":"143","messageId":"144","endLine":5,"endColumn":18},{"ruleId":"141","severity":1,"message":"145","line":26,"column":18,"nodeType":"143","messageId":"144","endLine":26,"endColumn":27},{"ruleId":"141","severity":1,"message":"158","line":4,"column":8,"nodeType":"143","messageId":"144","endLine":4,"endColumn":23},{"ruleId":"159","severity":1,"message":"160","line":12,"column":9,"nodeType":"161","messageId":"162","endLine":12,"endColumn":17},{"ruleId":"163","severity":1,"message":"164","line":4,"column":1,"nodeType":"165","endLine":8,"endColumn":2},{"ruleId":"163","severity":1,"message":"164","line":2,"column":1,"nodeType":"165","endLine":23,"endColumn":2},{"ruleId":"163","severity":1,"message":"164","line":2,"column":1,"nodeType":"165","endLine":23,"endColumn":2},{"ruleId":"163","severity":1,"message":"164","line":2,"column":1,"nodeType":"165","endLine":23,"endColumn":2},"no-unused-vars","'LOCALES' is defined but never used.","Identifier","unusedVar","'setLocale' is assigned a value but never used.","'user' is assigned a value but never used.","no-native-reassign",["166"],"no-negated-in-lhs",["167"],"'Button' is defined but never used.","'TextField' is defined but never used.","'FormControlLabel' is defined but never used.","'AddTaskIcon' is defined but never used.","'KeyboardArrowDownIcon' is defined but never used.","'useEffect' is defined but never used.","'Language' is defined but never used.","'useLocalStorage' is defined but never used.","no-dupe-keys","Duplicate key 'language'.","ObjectExpression","unexpected","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]