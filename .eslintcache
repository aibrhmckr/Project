[{"C:\\Users\\alica\\Desktop\\Project\\Project\\src\\index.js":"1","C:\\Users\\alica\\Desktop\\Project\\Project\\src\\App.js":"2","C:\\Users\\alica\\Desktop\\Project\\Project\\src\\components\\Signin.js":"3","C:\\Users\\alica\\Desktop\\Project\\Project\\src\\components\\Signup.js":"4","C:\\Users\\alica\\Desktop\\Project\\Project\\src\\store.js":"5","C:\\Users\\alica\\Desktop\\Project\\Project\\src\\components\\stores\\Log.js":"6","C:\\Users\\alica\\Desktop\\Project\\Project\\src\\views\\Login.js":"7","C:\\Users\\alica\\Desktop\\Project\\Project\\src\\routes.js":"8","C:\\Users\\alica\\Desktop\\Project\\Project\\src\\views\\Home.js":"9","C:\\Users\\alica\\Desktop\\Project\\Project\\src\\api\\gecici.js":"10","C:\\Users\\alica\\Desktop\\Project\\Project\\src\\ProtectedRoutes.js":"11","C:\\Users\\alica\\Desktop\\Project\\Project\\src\\ProtectedLogin.js":"12","C:\\Users\\alica\\Desktop\\Project\\Project\\src\\components\\Tasks.js":"13","C:\\Users\\alica\\Desktop\\Project\\Project\\src\\components\\ThemeSwitch.js":"14","C:\\Users\\alica\\Desktop\\Project\\Project\\src\\components\\LanguageSelector.js":"15","C:\\Users\\alica\\Desktop\\Project\\Project\\src\\components\\Language.js":"16","C:\\Users\\alica\\Desktop\\Project\\Project\\src\\components\\stores\\SettingSlice.js":"17"},{"size":348,"mtime":1658318269286,"results":"18","hashOfConfig":"19"},{"size":1252,"mtime":1658385888157,"results":"20","hashOfConfig":"19"},{"size":1418,"mtime":1658328431435,"results":"21","hashOfConfig":"19"},{"size":1637,"mtime":1657637488094,"results":"22","hashOfConfig":"19"},{"size":269,"mtime":1658384814416,"results":"23","hashOfConfig":"19"},{"size":1539,"mtime":1657780438189,"results":"24","hashOfConfig":"19"},{"size":3238,"mtime":1658385857827,"results":"25","hashOfConfig":"19"},{"size":305,"mtime":1657274586358,"results":"26","hashOfConfig":"19"},{"size":4947,"mtime":1658316083969,"results":"27","hashOfConfig":"19"},{"size":253,"mtime":1657222309096,"results":"28","hashOfConfig":"19"},{"size":384,"mtime":1658385056854,"results":"29","hashOfConfig":"19"},{"size":358,"mtime":1658385034979,"results":"30","hashOfConfig":"19"},{"size":1614,"mtime":1658300042658,"results":"31","hashOfConfig":"19"},{"size":2277,"mtime":1658341329537,"results":"32","hashOfConfig":"19"},{"size":1492,"mtime":1658323032913,"results":"33","hashOfConfig":"19"},{"size":327,"mtime":1658319654742,"results":"34","hashOfConfig":"19"},{"size":850,"mtime":1658384828553,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1lvmsm1",{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\alica\\Desktop\\Project\\Project\\src\\index.js",[],["75","76"],"C:\\Users\\alica\\Desktop\\Project\\Project\\src\\App.js",[],"C:\\Users\\alica\\Desktop\\Project\\Project\\src\\components\\Signin.js",[],"C:\\Users\\alica\\Desktop\\Project\\Project\\src\\components\\Signup.js",[],"C:\\Users\\alica\\Desktop\\Project\\Project\\src\\store.js",[],"C:\\Users\\alica\\Desktop\\Project\\Project\\src\\components\\stores\\Log.js",["77"],"import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { Users } from \"../../api/gecici\";\r\n\r\nexport const logSlice = createSlice({\r\n  name: \"counter\",\r\n  initialState: {\r\n    value: {\r\n      epost: \"\",\r\n      password: \"\",\r\n      name: \"\",\r\n      surname: \"\",\r\n      auth: false,\r\n      ISLog: localStorage.getItem(\"loggd\")\r\n    },\r\n  },\r\n  reducers: {\r\n    epost: (state, action) => {\r\n      state.value.epost = action.payload;\r\n      //console.log(state.value.epost);\r\n    },\r\n    password: (state, action) => {\r\n      state.value.password = action.payload;\r\n      //console.log(state.value.password);\r\n    },\r\n    name: (state, action) => {\r\n      state.value.name = action.payload;\r\n    },\r\n    surname: (state, action) => {\r\n      state.value.surname = action.payload;\r\n    },\r\n\r\n    logging: (state,action) => {\r\n\r\n      localStorage.setItem(\"loggd\",\"true\")\r\n      localStorage.setItem(\"epost\",state.value.epost)\r\n    },\r\n    save: (state) => {\r\n      const user = Users.find(user=>user.epost===state.value.epost && user.password===state.value.password)\r\n\r\n      localStorage.setItem(\"loggd\",\"true\")\r\n      localStorage.setItem(\"epost\",state.value.epost)\r\n    \r\n    },\r\n    logout: (state) => {\r\n      localStorage.setItem(\"loggd\",\"false\")\r\n      localStorage.removeItem(\"epost\")\r\n    },\r\n    ISLog:(state)=>{\r\n\r\n    }\r\n  },\r\n});\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { logging, epost, password, name, surname, save, logout,ISLog } = logSlice.actions;\r\n\r\nexport default logSlice.reducer;\r\n","C:\\Users\\alica\\Desktop\\Project\\Project\\src\\views\\Login.js",["78"],"C:\\Users\\alica\\Desktop\\Project\\Project\\src\\routes.js",[],["79","80"],"C:\\Users\\alica\\Desktop\\Project\\Project\\src\\views\\Home.js",["81","82"],"import {Button, TextField } from \"@mui/material\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { logout } from \"../components/stores/Log\";\r\nimport Tasks from \"../components/Tasks\";\r\nimport \"./Home.css\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport ThemeSwitch from \"../components/ThemeSwitch\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport * as React from 'react';\r\nimport AddTaskIcon from '@mui/icons-material/AddTask';\r\nimport LanguageSelector from \"../components/LanguageSelector\";\r\nconst Home = ({ setIsLog }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [text, setText] = useState(\"\");\r\n  const kullanici = localStorage.getItem(\"epost\") + \"#TR28\";\r\n  //let task = [];\r\n\r\n  const [todos, setTodos] = useState([]);\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n  //console.log(todos)\r\n  const unique_id = uuid();\r\n  const fetchData = async () => {\r\n    await fetch(\"http://localhost:3004/todos\")\r\n      .then((response) => response.json())\r\n      .then((data) => setTodos(data))\r\n      .catch((error) => console.log(error));\r\n  };\r\n  const onAdd = async () => {\r\n    await fetch(\"http://localhost:3004/todos\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        id: unique_id,\r\n        user: kullanici,\r\n        isDone: false,\r\n        task: text,\r\n      }),\r\n      headers: {\r\n        \"Content-type\": \"application/json; charset=UTF-8\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        if (response.status !== 201) {\r\n          return;\r\n        } else {\r\n          return response.json();\r\n        }\r\n      })\r\n      .then((data) => {\r\n        setTodos((users) => [...users, data]);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  const onDelete = async (id) => {\r\n    await fetch(`http://localhost:3004/todos/${id}`, {\r\n      method: \"DELETE\",\r\n    })\r\n      .then((response) => {\r\n        if (response.status !== 200) {\r\n          return;\r\n        } else {\r\n          setTodos(\r\n            todos.filter((todo) => {\r\n              return todo.id !== id;\r\n            })\r\n          );\r\n        }\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n  const onEdit = async (id, task, isDone, user) => {\r\n    console.log(\"onEdit çalıştı\");\r\n    await fetch(`http://localhost:3004/todos/${id}`, {\r\n      method: \"PUT\",\r\n      body: JSON.stringify({\r\n        id: id,\r\n        user: user,\r\n        task: task,\r\n        isDone: isDone,\r\n      }),\r\n      headers: {\r\n        \"Content-type\": \"application/json; charset=UTF-8\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        if (response.status !== 200) {\r\n          console.log(85);\r\n          return;\r\n        } else {\r\n          console.log(89);\r\n          return response.json();\r\n        }\r\n      })\r\n      .then((data) => {\r\n        const updatedTodos = todos.map((todo) => {\r\n          console.log(96);\r\n          if (todo.id === id) {\r\n            todo.task = task;\r\n            todo.isDone = isDone;\r\n          }\r\n          return todo;\r\n        });\r\n        console.log(task, \" \");\r\n        setTodos((todos) => updatedTodos);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  function InputBoxReset(inputID) {\r\n    document.getElementById(inputID).value = \"\";\r\n  }\r\n\r\n  const [checked, setChecked] = React.useState(true);\r\n  const handleChange = (event) => {\r\n    setChecked(event.target.checked);\r\n    console.log(\"Gece modu açıldı\")\r\n  };\r\n  return (\r\n    <div>\r\n      <FormControlLabel\r\n        control={\r\n          <ThemeSwitch\r\n            sx={{ m: 1 }}\r\n            defaultChecked\r\n            checked={checked}\r\n            onChange={handleChange}\r\n            inputProps={{ \"aria-label\": \"controlled\" }}\r\n          />\r\n        }\r\n        label=\"nightMode\"\r\n      />\r\n      <button\r\n        onClick={() => {\r\n          dispatch(logout());\r\n          setIsLog(\"false\");\r\n        }}\r\n        className=\"exit-btn\"\r\n      >\r\n        Log out\r\n      </button>\r\n      <LanguageSelector/>\r\n      <div className=\"add-group\">\r\n        <TextField\r\n          id=\"outlined-basic\"\r\n          label=\"Todo Header\"\r\n          variant=\"outlined\"\r\n          onChange={(e) => {\r\n            setText(e.target.value);\r\n          }}\r\n          className=\"task-texfield\"\r\n        />\r\n        <button\r\n          className=\"task-add\"\r\n          onClick={() => {\r\n            if (text !== \"\") {\r\n              InputBoxReset(\"outlined-basic\");\r\n              onAdd();\r\n            }\r\n          }}\r\n        >\r\n          Add\r\n        </button>\r\n      </div>\r\n      {todos.map((user) =>\r\n        kullanici === user.user ? (\r\n          <Tasks\r\n            id={user.id}\r\n            task={user.task}\r\n            isDone={user.isDone}\r\n            user={user.user}\r\n            onDelete={onDelete}\r\n            onEdit={onEdit}\r\n          />\r\n        ) : (\r\n          console.clear()\r\n        )\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default Home;\r\n","C:\\Users\\alica\\Desktop\\Project\\Project\\src\\api\\gecici.js",[],"C:\\Users\\alica\\Desktop\\Project\\Project\\src\\ProtectedRoutes.js",[],"C:\\Users\\alica\\Desktop\\Project\\Project\\src\\ProtectedLogin.js",[],"C:\\Users\\alica\\Desktop\\Project\\Project\\src\\components\\Tasks.js",[],"C:\\Users\\alica\\Desktop\\Project\\Project\\src\\components\\ThemeSwitch.js",[],"C:\\Users\\alica\\Desktop\\Project\\Project\\src\\components\\LanguageSelector.js",["83","84","85","86","87"],"import { Button, Menu, MenuItem } from \"@mui/material\";\r\nimport KeyboardArrowDownIcon from \"@mui/icons-material/KeyboardArrowDown\";\r\nimport LanguageIcon from \"@mui/icons-material/Language\";\r\nimport React, { useState } from \"react\";\r\nimport { Language } from \"./Language\";\r\nconst LanguageSelector = () => {\r\n  const languages = [\r\n    { id: 1, code: \"en\", name: \"English\" },\r\n    { id: 2, code: \"tr\", name: \"Türkçe\" },\r\n    { id: 3, code: \"de\", name: \"Deutsch\" },\r\n\r\n  ];\r\n  const [lang, setLang] = useState(\"tr-TR\");\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  const handleClick = (event) => {\r\n\r\n  };\r\n  const handleClose = () => {\r\n\r\n  };\r\n  const open = Boolean(anchorEl);\r\n\r\n  return (\r\n    <div>\r\n        \r\n      <Button\r\n        endIcon={<LanguageIcon />}\r\n        id=\"basic-button\"\r\n        aria-controls={open ? \"basic-menu\" : undefined}\r\n        aria-haspopup=\"true\"\r\n        aria-expanded={open ? \"true\" : undefined}\r\n        onClick={handleClick}\r\n      >\r\n        Language\r\n      </Button>\r\n      <Menu\r\n        id=\"basic-menu\"\r\n        anchorEl={anchorEl}\r\n        open={open}\r\n        onClose={handleClose}\r\n        MenuListProps={{\r\n          \"aria-labelledby\": \"basic-button\",\r\n        }}\r\n      >\r\n        {languages.map((item) => {\r\n          return (\r\n            <MenuItem key={item.id} onClick={() => {}}>\r\n              {item.name}\r\n            </MenuItem>\r\n          );\r\n        })}\r\n      </Menu>\r\n    </div>\r\n  );\r\n};\r\nexport default LanguageSelector;\r\n","C:\\Users\\alica\\Desktop\\Project\\Project\\src\\components\\Language.js",[],"C:\\Users\\alica\\Desktop\\Project\\Project\\src\\components\\stores\\SettingSlice.js",["88"],{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":38,"column":13,"nodeType":"95","messageId":"96","endLine":38,"endColumn":17},{"ruleId":"93","severity":1,"message":"97","line":12,"column":8,"nodeType":"95","messageId":"96","endLine":12,"endColumn":23},{"ruleId":"89","replacedBy":"98"},{"ruleId":"91","replacedBy":"99"},{"ruleId":"93","severity":1,"message":"100","line":1,"column":9,"nodeType":"95","messageId":"96","endLine":1,"endColumn":15},{"ruleId":"93","severity":1,"message":"101","line":11,"column":8,"nodeType":"95","messageId":"96","endLine":11,"endColumn":19},{"ruleId":"93","severity":1,"message":"102","line":2,"column":8,"nodeType":"95","messageId":"96","endLine":2,"endColumn":29},{"ruleId":"93","severity":1,"message":"103","line":5,"column":10,"nodeType":"95","messageId":"96","endLine":5,"endColumn":18},{"ruleId":"93","severity":1,"message":"104","line":13,"column":10,"nodeType":"95","messageId":"96","endLine":13,"endColumn":14},{"ruleId":"93","severity":1,"message":"105","line":13,"column":16,"nodeType":"95","messageId":"96","endLine":13,"endColumn":23},{"ruleId":"93","severity":1,"message":"106","line":14,"column":20,"nodeType":"95","messageId":"96","endLine":14,"endColumn":31},{"ruleId":"93","severity":1,"message":"97","line":4,"column":8,"nodeType":"95","messageId":"96","endLine":4,"endColumn":23},"no-native-reassign",["107"],"no-negated-in-lhs",["108"],"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","'useLocalStorage' is defined but never used.",["107"],["108"],"'Button' is defined but never used.","'AddTaskIcon' is defined but never used.","'KeyboardArrowDownIcon' is defined but never used.","'Language' is defined but never used.","'lang' is assigned a value but never used.","'setLang' is assigned a value but never used.","'setAnchorEl' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]